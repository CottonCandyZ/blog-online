@tailwind base;
@tailwind components;

$themeColorList: (#0891b2 #16a34a #ea580c #db2777);

@function getColorValue($color) {
  @return #{red($color)} #{green($color)} #{blue($color)};
}

@mixin theme-primary-map($primary-color) {
  --color-primary-bg: #{getColorValue(#fff)};
  --color-primary-dark: #{getColorValue(mix($primary-color, black, 40%))};
  --color-primary: #{getColorValue($primary-color)};
  --color-primary-small: #{getColorValue(mix($primary-color, white, 65%))};
  --color-primary-medium: #{getColorValue(mix($primary-color, white, 40%))};
  --color-primary-light: #{getColorValue(mix($primary-color, white, 15%))};
  --color-primary-extralight: #{getColorValue(mix($primary-color, white, 10%))};
}


  @mixin theme-primary-dark-map($primary-color) {
    --color-primary-bg: #{getColorValue(#161616)};
    --color-primary-dark: #{getColorValue(mix($primary-color, white, 40%))};
    --color-primary: #{getColorValue($primary-color)};
    --color-primary-small: #{getColorValue(mix($primary-color, black, 65%))};
    --color-primary-medium: #{getColorValue(mix($primary-color, white, 40%))};
    --color-primary-light: #{getColorValue(mix($primary-color, white, 15%))};
    --color-primary-extralight: #{getColorValue(mix($primary-color, white, 5%))};
  }

@for $i from 1 through length($themeColorList) {
  $color: nth($themeColorList, $i);
  .theme-#{$i} {
    @include theme-primary-map($color);
  }
  .dark {
    &.theme-#{$i} {
      @include theme-primary-dark-map($color);
    }
  }
}

@tailwind utilities;

@import "animation.scss";
@import "markdown.scss";
