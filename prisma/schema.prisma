// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id       String    @id
  createAt DateTime  @default(now())
  label    Int       @unique @default(autoincrement())
  name     String
  comments Comment[]
  device   Device[]
  session  Session[]
}

model Comment {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  author   User     @relation(fields: [authorId], references: [id])
  authorId String
  content  String
  postSlug String
}

model Session {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model AuthSession {
  id               String  @id @default(uuid())
  userId           String?
  userName         String?
  currentChallenge String
}

model Device {
  credentialID        String   @id
  createAt            DateTime @default(now())
  user                User     @relation(fields: [userId], references: [id])
  userId              String
  credentialPublicKey Bytes
  counter             Int
  transports          String?
  removed             Boolean @default(false)
  aaguid              String
}
